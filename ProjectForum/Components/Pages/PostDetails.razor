@page "/postdetails/{category}" 

@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Authorization
@using ProjectForum.Data 
@using ProjectForum.Models

@inject PostService PostService
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager Navigation
@inject HttpClient Http

@* Detaljer om ett inlägg, kommentarer, innehåll, titel, likeas osv *@

<h3>PostDetails</h3>
<h4>@Post?.Title</h4>

@if (Post == null)
{
    <p>Loading post...</p>
}
else
{
    <div>
        <p><strong>User:</strong> @Post.User?.UserName</p>
        <p>@Post.Content</p>

        <button @onclick="LikePost">❤️ Like</button>

        <h4>Comments</h4>
        @if (!Post.Comments.Any())
        {
            <p>No comments yet.</p>
        }
        else
        {
            <ul>
                @foreach (var comment in Post.Comments)
                {
                    <li>@comment.Content (by @comment.User?.UserName)</li>
                }
            </ul>
        }
        @* <h5>Add a comment</h5>
        <textarea @bind="NewCommentContent" rows="3" cols="50"></textarea>
        <br />
        <button @onclick="AddComment">Add Comment</button> *@
    </div>
}

@code {
    [Parameter]
    public int PostId { get; set; }

    private Post? Post;
    private string NewCommentContent = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadPost();
    }

    private async Task LoadPost()
    {
        Post = await Http.GetFromJsonAsync<Post>($"api/posts/{PostId}");
    }

    private async Task LikePost()
    {
        await Http.PostAsync($"api/posts/{PostId}/like", null);
    }

    private async Task AddComment()
    {
        if (string.IsNullOrWhiteSpace(NewCommentContent))
            return;

        var newComment = new Comment
        {
            Content = NewCommentContent,
            PostId = PostId
        };

        await Http.PostAsJsonAsync($"api/posts/{PostId}/comments", newComment);

        NewCommentContent = "";

        await LoadPost();
    }
}
